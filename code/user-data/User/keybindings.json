// Place your key bindings in this file to override the defaultsauto[]
[
	// #region ctrl+l conflicts
	{
		"key": "ctrl+l alt+b",
		"command": "-latex-workshop.build",
		"when": "config.latex-workshop.bind.altKeymap.enabled && editorLangId =~ /latex|rsweave|jlweave/"
	},
	{
		"key": "ctrl+l alt+c",
		"command": "-latex-workshop.clean",
		"when": "config.latex-workshop.bind.altKeymap.enabled && editorLangId =~ /latex|rsweave|jlweave/"
	},
	{
		"key": "ctrl+l ]",
		"command": "-latex-workshop.demote-sectioning",
		"when": "config.latex-workshop.bind.altKeymap.enabled && editorTextFocus && !editorReadonly && editorLangId =~ /latex|rsweave|jlweave/"
	},
	{
		"key": "ctrl+l [",
		"command": "-latex-workshop.promote-sectioning",
		"when": "config.latex-workshop.bind.altKeymap.enabled && editorTextFocus && !editorReadonly && editorLangId =~ /latex|rsweave|jlweave/"
	},
	{
		"key": "ctrl+l ctrl+w",
		"command": "-latex-workshop.surround",
		"when": "editorHasSelection && editorTextFocus && !editorReadonly && editorLangId =~ /latex|rsweave|jlweave/"
	},
	{
		"key": "ctrl+l alt+j",
		"command": "-latex-workshop.synctex",
		"when": "config.latex-workshop.bind.altKeymap.enabled && editorTextFocus && editorLangId == 'latex'"
	},
	{
		"key": "ctrl+l alt+m",
		"command": "-latex-workshop.toggleMathPreviewPanel",
		"when": "config.latex-workshop.bind.altKeymap.enabled && editorLangId =~ /latex|rsweave|jlweave/"
	},
	{
		"key": "ctrl+l alt+v",
		"command": "-latex-workshop.view",
		"when": "config.latex-workshop.bind.altKeymap.enabled && editorLangId =~ /latex|rsweave|jlweave/"
	},
	{
		"key": "ctrl+l ctrl+e",
		"command": "-latex-workshop.shortcut.emph",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /latex|rsweave|jlweave/"
	},
	{
		"key": "ctrl+l ctrl+enter",
		"command": "-latex-workshop.shortcut.item",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /latex|rsweave|jlweave/"
	},
	{
		"key": "ctrl+l ctrl+b",
		"command": "-latex-workshop.shortcut.textbf",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /latex|rsweave|jlweave/"
	},
	{
		"key": "ctrl+l ctrl+i",
		"command": "-latex-workshop.shortcut.textit",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /latex|rsweave|jlweave/"
	},
	{
		"key": "ctrl+l ctrl+n",
		"command": "-latex-workshop.shortcut.textnormal",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /latex|rsweave|jlweave/"
	},
	{
		"key": "ctrl+l ctrl+r",
		"command": "-latex-workshop.shortcut.textrm",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /latex|rsweave|jlweave/"
	},
	{
		"key": "ctrl+l ctrl+c",
		"command": "-latex-workshop.shortcut.textsc",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /latex|rsweave|jlweave/"
	},
	{
		"key": "ctrl+l ctrl+s",
		"command": "-latex-workshop.shortcut.textsl",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /latex|rsweave|jlweave/"
	},
	{
		"key": "ctrl+l ctrl+-",
		"command": "-latex-workshop.shortcut.textsubscript",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /latex|rsweave|jlweave/"
	},
	{
		"key": "ctrl+l ctrl+6",
		"command": "-latex-workshop.shortcut.textsuperscript",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /latex|rsweave|jlweave/"
	},
	{
		"key": "ctrl+l ctrl+t",
		"command": "-latex-workshop.shortcut.texttt",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /latex|rsweave|jlweave/"
	},
	{
		"key": "ctrl+l ctrl+u",
		"command": "-latex-workshop.shortcut.underline",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /latex|rsweave|jlweave/"
	},
	{
		"key": "ctrl+l ctrl+m",
		"command": "-editor.action.toggleTabFocusMode",
		"when": "textInputFocus && editorLangId =~ /latex|rsweave|jlweave/"
	},
	{
		"key": "ctrl+l alt+x",
		"command": "-workbench.view.extension.latex",
		"when": "config.latex-workshop.bind.altKeymap.enabled"
	},
	{
		"key": "ctrl+l alt+x",
		"command": "-workbench.view.extension.latex-workshop-activitybar",
		"when": "config.latex-workshop.bind.altKeymap.enabled"
	},
	{
		"key": "ctrl+l ctrl+l",
		"command": "-expandLineSelection",
		"when": "textInputFocus && editorLangId =~ /latex|rsweave|jlweave/"
	},
	{
		"key": "ctrl+l",
		"command": "-notebook.centerActiveCell",
		"when": "notebookEditorFocused"
	},
	// #endregion

	// #region ctrl+tab cycle forward tabs and terminals
	{
		"key": "ctrl+tab",
		"command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
	},
	{
		"key": "ctrl+tab",
		"command": "workbench.action.nextEditor"
	},
	{
		"key": "ctrl+tab",
		"command": "workbench.action.terminal.focusNext",
		"when": "terminalFocus && terminalProcessSupported"
	},
	// #endregion

	// #region ctrl+tab cycle backward tabs and terminals
	{
		"key": "ctrl+shift+tab",
		"command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup"
	},
	{
		"key": "ctrl+shift+tab",
		"command": "workbench.action.previousEditor"
	},
	{
		"key": "ctrl+shift+tab",
		"command": "workbench.action.terminal.focusPrevious",
		"when": "terminalFocus && terminalProcessSupported"
	},
	// #endregion

	// #region ctrl+w and ctrl+e delete word
	{
		"key": "ctrl+w",
		"command": "-workbench.action.closeActiveEditor"
	},
	{
		"key": "ctrl+w",
		"command": "-workbench.action.closeGroup",
		"when": "activeEditorGroupEmpty && multipleEditorGroups"
	},
	{
		"key": "ctrl+w",
		"command": "deleteWordLeft",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+e",
		"command": "-workbench.action.quickOpen"
	},
	{
		"key": "ctrl+e",
		"command": "deleteWordRight",
		"when": "textInputFocus && !editorReadonly"
	},
	// #endregion

	// #region close tabs
	{
		"key": "ctrl+q",
		"command": "-workbench.action.quit"
	},
	{
		"key": "ctrl+q",
		"command": "workbench.action.closeActiveEditor"
	},
	{
		"key": "ctrl+shift+q",
		"command": "workbench.action.closeEditorsInGroup"
	},
	{
		"key": "ctrl+capslock",
		"command": "workbench.action.toggleMaximizedPanel"
	},
	// #endregion

	// #region make ctrl+shift+v paste
	{
		"key": "ctrl+shift+v",
		"command": "-markdown.showPreview",
		"when": "!notebookEditorFocused && editorLangId == 'markdown'"
	},
	// #endregion

	// #region split editor
	{
		"key": "shift+alt+2",
		"command": "workbench.action.splitEditorRight"
	},
	{
		"key": "shift+alt+3",
		"command": "workbench.action.splitEditorDown"
	},
	{
		"key": "alt+up",
		"command": "workbench.action.focusAboveGroup",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+down",
		"command": "workbench.action.focusBelowGroup",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+left",
		"command": "workbench.action.focusLeftGroup",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+right",
		"command": "workbench.action.focusRightGroup",
		"when": "editorTextFocus"
	},
	// #endregion

	// #region go to definition
	{
		"key": "ctrl+,",
		"command": "-workbench.action.openSettings"
	},
	{
		"key": "ctrl+,",
		"command": "editor.action.revealDefinition",
		"when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
	},
	// #endregion

	// #region sublime text keymap
	{
		"key": "ctrl+t",
		"command": "extension.transpose",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+t",
		"command": "-workbench.action.showAllSymbols"
	},

	// better block comment binding
	{
		"key": "ctrl+shift+a",
		"command": "-editor.action.blockComment",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+/",
		"command": "editor.action.blockComment",
		"when": "editorTextFocus && !editorReadonly"
	},

	// select all instances
	{
		"key": "ctrl+shift+l",
		"command": "-editor.action.selectHighlights",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+shift+a",
		"command": "editor.action.selectHighlights",
		"when": "editorFocus"
	},

	// ctrl+shift+l insert cursor at end of line
	{
		"key": "ctrl+shift+l",
		"command": "-selectAllSearchEditorMatches",
		"when": "inSearchEditor"
	},
	{
		"key": "ctrl+shift+l",
		"command": "-addCursorsAtSearchResults",
		"when": "fileMatchOrMatchFocus && searchViewletVisible"
	},
	{
		"key": "shift+alt+i",
		"command": "-editor.action.insertCursorAtEndOfEachLineSelected",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+shift+l",
		"command": "editor.action.insertCursorAtEndOfEachLineSelected",
		"when": "editorTextFocus"
	},

	// duplicate current line
	{
		"key": "ctrl+shift+d",
		"command": "-workbench.view.debug",
		"when": "viewContainer.workbench.view.debug.enabled"
	},
	{
		"key": "ctrl+shift+alt+down",
		"command": "-editor.action.copyLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+d",
		"command": "editor.action.copyLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},

	// move lines
	{
		"key": "alt+up",
		"command": "-editor.action.moveLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+up",
		"command": "-editor.action.insertCursorAbove",
		"when": "editorTextFocus"
	},
	{
		"linux": "ctrl+shift+up",
		"key": "ctrl+shift+up",
		"command": "editor.action.moveLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+down",
		"command": "-editor.action.moveLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+down",
		"command": "-editor.action.insertCursorBelow",
		"when": "editorTextFocus"
	},
	{
		"linux": "ctrl+shift+down",
		"key": "ctrl+shift+down",
		"command": "editor.action.moveLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},

	// delete left right
	{
		"key": "ctrl+shift+backspace",
		"command": "deleteAllLeft"
	},
	{
		"key": "ctrl+shift+delete",
		"command": "deleteAllRight"
	},

	// uppercase lowercase
	{
		"key": "ctrl+k ctrl+u",
		"command": "-editor.action.removeCommentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+k ctrl+u",
		"command": "editor.action.transformToUppercase",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+k ctrl+l",
		"command": "-editor.toggleFold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+l",
		"command": "editor.action.transformToLowercase",
		"when": "editorTextFocus && !editorReadonly"
	},

	// back and forward
	{
		"key": "alt+-",
		"command": "workbench.action.navigateBack",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+-",
		"command": "workbench.action.navigateForward",
		"when": "editorTextFocus"
	},
	// #endregion

	// #region hjkl move
	// {
	// 	"key": "alt+h",
	// 	"command": "-gitlens.showQuickFileHistory",
	// 	"when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
	// },
	// {
	// 	"key": "shift+alt+h",
	// 	"command": "-gitlens.showQuickRepoHistory",
	// 	"when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
	// },
	{
		"key": "alt+h",
		"command": "cursorLeft",
		"when": "textInputFocus"
	},
	{
		"key": "shift+alt+h",
		"command": "cursorLeftSelect",
		"when": "textInputFocus"
	},
	{
		"key": "shift+alt+h",
		"command": "cursorColumnSelectLeft",
		"when": "editorColumnSelection && textInputFocus"
	},
	{
		"key": "ctrl+alt+h",
		"command": "cursorWordLeft",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+alt+h",
		"command": "cursorWordLeftSelect",
		"when": "textInputFocus"
	},
	{
		"key": "alt+j",
		"command": "cursorDown",
		"when": "textInputFocus"
	},
	{
		"key": "shift+alt+j",
		"command": "cursorDownSelect",
		"when": "textInputFocus"
	},
	{
		"key": "shift+alt+j",
		"command": "cursorColumnSelectDown",
		"when": "editorColumnSelection && textInputFocus"
	},
	{
		"key": "ctrl+alt+j",
		"command": "scrollLineDown",
		"when": "textInputFocus"
	},
	{
		"key": "alt+k",
		"command": "cursorUp",
		"when": "textInputFocus"
	},
	{
		"key": "shift+alt+k",
		"command": "cursorUpSelect",
		"when": "textInputFocus"
	},
	{
		"key": "shift+alt+k",
		"command": "cursorColumnSelectUp",
		"when": "editorColumnSelection && textInputFocus"
	},
	{
		"key": "ctrl+alt+k",
		"command": "scrollLineUp",
		"when": "textInputFocus"
	},
	{
		"key": "alt+l",
		"command": "cursorRight",
		"when": "textInputFocus"
	},
	{
		"key": "shift+alt+l",
		"command": "cursorRightSelect",
		"when": "textInputFocus"
	},
	{
		"key": "shift+alt+l",
		"command": "cursorColumnSelectRight",
		"when": "editorColumnSelection && textInputFocus"
	},
	{
		"key": "ctrl+alt+l",
		"command": "cursorWordRight",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+alt+l",
		"command": "cursorWordRightSelect",
		"when": "textInputFocus"
	},
	// #endregion
]
